min(temperature2)
library(fields) # should be imported when installing Thermimage
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=30, maxrangeset=42, trans="rotate270.matrix")
temperature2 <- temperature[50:452, 10:540]
dim(temperature2)
h2 = dim(temperature2)[1]
w2 = dim(temperature2)[2]
max(temperature2)
min(temperature2)
library(fields) # should be imported when installing Thermimage
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=30, maxrangeset=42, trans="rotate270.matrix")
temperature2 <- temperature[70:452, 10:540]
dim(temperature2)
h2 = dim(temperature2)[1]
w2 = dim(temperature2)[2]
max(temperature2)
min(temperature2)
library(fields) # should be imported when installing Thermimage
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=30, maxrangeset=42, trans="rotate270.matrix")
temperature2 <- temperature[70:432, 10:540]
dim(temperature2)
h2 = dim(temperature2)[1]
w2 = dim(temperature2)[2]
max(temperature2)
min(temperature2)
library(fields) # should be imported when installing Thermimage
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=30, maxrangeset=42, trans="rotate270.matrix")
temperature2 <- temperature[70:432, 10:500]
dim(temperature2)
h2 = dim(temperature2)[1]
w2 = dim(temperature2)[2]
max(temperature2)
min(temperature2)
library(fields) # should be imported when installing Thermimage
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=30, maxrangeset=42, trans="rotate270.matrix")
temperature2 <- temperature[70:432, 10:4900]
dim(temperature2)
temperature2 <- temperature[70:432, 10:490]
dim(temperature2)
h2 = dim(temperature2)[1]
w2 = dim(temperature2)[2]
max(temperature2)
min(temperature2)
library(fields) # should be imported when installing Thermimage
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=30, maxrangeset=42, trans="rotate270.matrix")
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=23, maxrangeset=43, trans="rotate270.matrix")
temperature2 <- temperature[70:432, 10:490]
dim(temperature2)
h2 = dim(temperature2)[1]
w2 = dim(temperature2)[2]
max(temperature2)
min(temperature2)
library(fields) # should be imported when installing Thermimage
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=23, maxrangeset=43, trans="rotate270.matrix")
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=33, maxrangeset=43, trans="rotate270.matrix")
max(temperature2)
min(temperature2)
write.table(temperature2,"/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal_preproc/temperature_DJI_0866..csv",row.names = FALSE, col.names =FALSE,sep = ",")
write.table(temperature2,"/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal_preproc/temperature_DJI_0866.csv",row.names = FALSE, col.names =FALSE,sep = ",")
#f <- img_names[130]
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/DJI_0703.jpg"
img<-readflirJPG(f, exiftoolpath="installed")
dim(img)
cams<-flirsettings(f, exiftoolpath="installed", camvals="")
head(cbind(cams$Info), 20) # Large amount of Info, show just the first 20 tages for readme
plancks<-flirsettings(f, exiftoolpath="installed", camvals="-*Planck*")
unlist(plancks$Info)
cbind(unlist(cams$Dates))
cams$Dates$DateTimeOriginal
ObjectEmissivity<- cams$Info$Emissivity              # Image Saved Emissivity - should be ~0.95 or 0.96
dateOriginal<-cams$Dates$DateTimeOriginal             # Original date/time extracted from file
dateModif<-   cams$Dates$FileModificationDateTime     # Modification date/time extracted from file
PlanckR1<-    cams$Info$PlanckR1                      # Planck R1 constant for camera
PlanckB<-     cams$Info$PlanckB                       # Planck B constant for camera
PlanckF<-     cams$Info$PlanckF                       # Planck F constant for camera
PlanckO<-     cams$Info$PlanckO                       # Planck O constant for camera
PlanckR2<-    cams$Info$PlanckR2                      # Planck R2 constant for camera
ATA1<-        cams$Info$AtmosphericTransAlpha1        # Atmospheric Transmittance Alpha 1
ATA2<-        cams$Info$AtmosphericTransAlpha2        # Atmospheric Transmittance Alpha 2
ATB1<-        cams$Info$AtmosphericTransBeta1         # Atmospheric Transmittance Beta 1
ATB2<-        cams$Info$AtmosphericTransBeta2         # Atmospheric Transmittance Beta 2
ATX<-         cams$Info$AtmosphericTransX             # Atmospheric Transmittance X
OD<-          cams$Info$ObjectDistance                # object distance in metres
FD<-          cams$Info$FocusDistance                 # focus distance in metres
ReflT<-       cams$Info$ReflectedApparentTemperature  # Reflected apparent temperature
AtmosT<-      cams$Info$AtmosphericTemperature        # Atmospheric temperature
IRWinT<-      cams$Info$IRWindowTemperature           # IR Window Temperature
IRWinTran<-   cams$Info$IRWindowTransmission          # IR Window transparency
RH<-          cams$Info$RelativeHumidity              # Relative Humidity
h<-           cams$Info$RawThermalImageHeight         # sensor height (i.e. image height)
w<-           cams$Info$RawThermalImageWidth          # sensor width (i.e. image width)
temperature<-raw2temp(img, ObjectEmissivity, OD, ReflT, AtmosT, IRWinT, IRWinTran, RH,
PlanckR1, PlanckB, PlanckF, PlanckO, PlanckR2,
ATA1, ATA2, ATB1, ATB2, ATX)
str(temperature)
temperature2 <- temperature[70:432, 10:490]
dim(temperature2)
h2 = dim(temperature2)[1]
w2 = dim(temperature2)[2]
max(temperature2)
temperature2 <- temperature#[70:432, 10:490]
dim(temperature2)
h2 = dim(temperature2)[1]
w2 = dim(temperature2)[2]
max(temperature2)
min(temperature2)
library(fields) # should be imported when installing Thermimage
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=43, maxrangeset=56, trans="rotate270.matrix")
#f <- img_names[130]
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/DJI_0796.jpg"
img<-readflirJPG(f, exiftoolpath="installed")
dim(img)
cams<-flirsettings(f, exiftoolpath="installed", camvals="")
head(cbind(cams$Info), 20) # Large amount of Info, show just the first 20 tages for readme
plancks<-flirsettings(f, exiftoolpath="installed", camvals="-*Planck*")
unlist(plancks$Info)
cbind(unlist(cams$Dates))
cams$Dates$DateTimeOriginal
ObjectEmissivity<- cams$Info$Emissivity              # Image Saved Emissivity - should be ~0.95 or 0.96
dateOriginal<-cams$Dates$DateTimeOriginal             # Original date/time extracted from file
dateModif<-   cams$Dates$FileModificationDateTime     # Modification date/time extracted from file
PlanckR1<-    cams$Info$PlanckR1                      # Planck R1 constant for camera
PlanckB<-     cams$Info$PlanckB                       # Planck B constant for camera
PlanckF<-     cams$Info$PlanckF                       # Planck F constant for camera
PlanckO<-     cams$Info$PlanckO                       # Planck O constant for camera
PlanckR2<-    cams$Info$PlanckR2                      # Planck R2 constant for camera
ATA1<-        cams$Info$AtmosphericTransAlpha1        # Atmospheric Transmittance Alpha 1
ATA2<-        cams$Info$AtmosphericTransAlpha2        # Atmospheric Transmittance Alpha 2
ATB1<-        cams$Info$AtmosphericTransBeta1         # Atmospheric Transmittance Beta 1
ATB2<-        cams$Info$AtmosphericTransBeta2         # Atmospheric Transmittance Beta 2
ATX<-         cams$Info$AtmosphericTransX             # Atmospheric Transmittance X
OD<-          cams$Info$ObjectDistance                # object distance in metres
FD<-          cams$Info$FocusDistance                 # focus distance in metres
ReflT<-       cams$Info$ReflectedApparentTemperature  # Reflected apparent temperature
AtmosT<-      cams$Info$AtmosphericTemperature        # Atmospheric temperature
IRWinT<-      cams$Info$IRWindowTemperature           # IR Window Temperature
IRWinTran<-   cams$Info$IRWindowTransmission          # IR Window transparency
RH<-          cams$Info$RelativeHumidity              # Relative Humidity
h<-           cams$Info$RawThermalImageHeight         # sensor height (i.e. image height)
w<-           cams$Info$RawThermalImageWidth          # sensor width (i.e. image width)
temperature<-raw2temp(img, ObjectEmissivity, OD, ReflT, AtmosT, IRWinT, IRWinTran, RH,
PlanckR1, PlanckB, PlanckF, PlanckO, PlanckR2,
ATA1, ATA2, ATB1, ATB2, ATX)
str(temperature)
temperature2 <- temperature#[70:432, 10:490]
dim(temperature2)
h2 = dim(temperature2)[1]
w2 = dim(temperature2)[2]
max(temperature2)
min(temperature2)
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=min(temperature2)-0.5, maxrangeset=max(temperature2)+0.5, trans="rotate270.matrix")
img<-readflirJPG(f, exiftoolpath="installed")
dim(img)
cams<-flirsettings(f, exiftoolpath="installed", camvals="")
head(cbind(cams$Info), 20) # Large amount of Info, show just the first 20 tages for readme
plancks<-flirsettings(f, exiftoolpath="installed", camvals="-*Planck*")
unlist(plancks$Info)
cbind(unlist(cams$Dates))
cams$Dates$DateTimeOriginal
plot_thermal <- function(image_path){
img<-readflirJPG(image_path, exiftoolpath="installed")
cams<-flirsettings(f, exiftoolpath="installed", camvals="")
ObjectEmissivity<- cams$Info$Emissivity              # Image Saved Emissivity - should be ~0.95 or 0.96
dateOriginal<-cams$Dates$DateTimeOriginal             # Original date/time extracted from file
dateModif<-   cams$Dates$FileModificationDateTime     # Modification date/time extracted from file
PlanckR1<-    cams$Info$PlanckR1                      # Planck R1 constant for camera
PlanckB<-     cams$Info$PlanckB                       # Planck B constant for camera
PlanckF<-     cams$Info$PlanckF                       # Planck F constant for camera
PlanckO<-     cams$Info$PlanckO                       # Planck O constant for camera
PlanckR2<-    cams$Info$PlanckR2                      # Planck R2 constant for camera
ATA1<-        cams$Info$AtmosphericTransAlpha1        # Atmospheric Transmittance Alpha 1
ATA2<-        cams$Info$AtmosphericTransAlpha2        # Atmospheric Transmittance Alpha 2
ATB1<-        cams$Info$AtmosphericTransBeta1         # Atmospheric Transmittance Beta 1
ATB2<-        cams$Info$AtmosphericTransBeta2         # Atmospheric Transmittance Beta 2
ATX<-         cams$Info$AtmosphericTransX             # Atmospheric Transmittance X
OD<-          cams$Info$ObjectDistance                # object distance in metres
FD<-          cams$Info$FocusDistance                 # focus distance in metres
ReflT<-       cams$Info$ReflectedApparentTemperature  # Reflected apparent temperature
AtmosT<-      cams$Info$AtmosphericTemperature        # Atmospheric temperature
IRWinT<-      cams$Info$IRWindowTemperature           # IR Window Temperature
IRWinTran<-   cams$Info$IRWindowTransmission          # IR Window transparency
RH<-          cams$Info$RelativeHumidity              # Relative Humidity
h<-           cams$Info$RawThermalImageHeight         # sensor height (i.e. image height)
w<-           cams$Info$RawThermalImageWidth          # sensor width (i.e. image width)
temperature<-raw2temp(img, ObjectEmissivity, OD, ReflT, AtmosT, IRWinT, IRWinTran, RH,
PlanckR1, PlanckB, PlanckF, PlanckO, PlanckR2,
ATA1, ATA2, ATB1, ATB2, ATX)
h2 = dim(temperature)[1]
w2 = dim(temperature)[2]
toto <- plotTherm(temperature2, h=h2, w=w2, minrangeset=min(temperature2)-0.5, maxrangeset=max(temperature2)+0.5, trans="rotate270.matrix")
return(toto)
}
#f <- img_names[130]
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/DJI_0796.jpg"
plot_thermal(f)
#f <- img_names[130]
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/DJI_0703.jpg"
plot_thermal(f)
toto <- plotTherm(temperature, h=h2, w=w2, minrangeset=min(temperature2)-0.5, maxrangeset=max(temperature2)+0.5, trans="rotate270.matrix")
plot_thermal <- function(image_path){
img<-readflirJPG(image_path, exiftoolpath="installed")
cams<-flirsettings(f, exiftoolpath="installed", camvals="")
ObjectEmissivity<- cams$Info$Emissivity              # Image Saved Emissivity - should be ~0.95 or 0.96
dateOriginal<-cams$Dates$DateTimeOriginal             # Original date/time extracted from file
dateModif<-   cams$Dates$FileModificationDateTime     # Modification date/time extracted from file
PlanckR1<-    cams$Info$PlanckR1                      # Planck R1 constant for camera
PlanckB<-     cams$Info$PlanckB                       # Planck B constant for camera
PlanckF<-     cams$Info$PlanckF                       # Planck F constant for camera
PlanckO<-     cams$Info$PlanckO                       # Planck O constant for camera
PlanckR2<-    cams$Info$PlanckR2                      # Planck R2 constant for camera
ATA1<-        cams$Info$AtmosphericTransAlpha1        # Atmospheric Transmittance Alpha 1
ATA2<-        cams$Info$AtmosphericTransAlpha2        # Atmospheric Transmittance Alpha 2
ATB1<-        cams$Info$AtmosphericTransBeta1         # Atmospheric Transmittance Beta 1
ATB2<-        cams$Info$AtmosphericTransBeta2         # Atmospheric Transmittance Beta 2
ATX<-         cams$Info$AtmosphericTransX             # Atmospheric Transmittance X
OD<-          cams$Info$ObjectDistance                # object distance in metres
FD<-          cams$Info$FocusDistance                 # focus distance in metres
ReflT<-       cams$Info$ReflectedApparentTemperature  # Reflected apparent temperature
AtmosT<-      cams$Info$AtmosphericTemperature        # Atmospheric temperature
IRWinT<-      cams$Info$IRWindowTemperature           # IR Window Temperature
IRWinTran<-   cams$Info$IRWindowTransmission          # IR Window transparency
RH<-          cams$Info$RelativeHumidity              # Relative Humidity
h<-           cams$Info$RawThermalImageHeight         # sensor height (i.e. image height)
w<-           cams$Info$RawThermalImageWidth          # sensor width (i.e. image width)
temperature<-raw2temp(img, ObjectEmissivity, OD, ReflT, AtmosT, IRWinT, IRWinTran, RH,
PlanckR1, PlanckB, PlanckF, PlanckO, PlanckR2,
ATA1, ATA2, ATB1, ATB2, ATX)
h2 = dim(temperature)[1]
w2 = dim(temperature)[2]
toto <- plotTherm(temperature, h=h2, w=w2, minrangeset=min(temperature2)-0.5, maxrangeset=max(temperature2)+0.5, trans="rotate270.matrix")
return(toto)
}
#f <- img_names[130]
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/DJI_0703.jpg"
plot_thermal(f)
plot_thermal <- function(image_path){
img<-readflirJPG(image_path, exiftoolpath="installed")
cams<-flirsettings(f, exiftoolpath="installed", camvals="")
ObjectEmissivity<- cams$Info$Emissivity              # Image Saved Emissivity - should be ~0.95 or 0.96
dateOriginal<-cams$Dates$DateTimeOriginal             # Original date/time extracted from file
dateModif<-   cams$Dates$FileModificationDateTime     # Modification date/time extracted from file
PlanckR1<-    cams$Info$PlanckR1                      # Planck R1 constant for camera
PlanckB<-     cams$Info$PlanckB                       # Planck B constant for camera
PlanckF<-     cams$Info$PlanckF                       # Planck F constant for camera
PlanckO<-     cams$Info$PlanckO                       # Planck O constant for camera
PlanckR2<-    cams$Info$PlanckR2                      # Planck R2 constant for camera
ATA1<-        cams$Info$AtmosphericTransAlpha1        # Atmospheric Transmittance Alpha 1
ATA2<-        cams$Info$AtmosphericTransAlpha2        # Atmospheric Transmittance Alpha 2
ATB1<-        cams$Info$AtmosphericTransBeta1         # Atmospheric Transmittance Beta 1
ATB2<-        cams$Info$AtmosphericTransBeta2         # Atmospheric Transmittance Beta 2
ATX<-         cams$Info$AtmosphericTransX             # Atmospheric Transmittance X
OD<-          cams$Info$ObjectDistance                # object distance in metres
FD<-          cams$Info$FocusDistance                 # focus distance in metres
ReflT<-       cams$Info$ReflectedApparentTemperature  # Reflected apparent temperature
AtmosT<-      cams$Info$AtmosphericTemperature        # Atmospheric temperature
IRWinT<-      cams$Info$IRWindowTemperature           # IR Window Temperature
IRWinTran<-   cams$Info$IRWindowTransmission          # IR Window transparency
RH<-          cams$Info$RelativeHumidity              # Relative Humidity
h<-           cams$Info$RawThermalImageHeight         # sensor height (i.e. image height)
w<-           cams$Info$RawThermalImageWidth          # sensor width (i.e. image width)
temperature<-raw2temp(img, ObjectEmissivity, OD, ReflT, AtmosT, IRWinT, IRWinTran, RH,
PlanckR1, PlanckB, PlanckF, PlanckO, PlanckR2,
ATA1, ATA2, ATB1, ATB2, ATX)
h2 = dim(temperature)[1]
w2 = dim(temperature)[2]
toto <- plotTherm(temperature, h=h2, w=w2, minrangeset=min(temperature)-0.5, maxrangeset=max(temperature)+0.5, trans="rotate270.matrix")
return(toto)
}
#f <- img_names[130]
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/DJI_0703.jpg"
plot_thermal(f)
#f <- img_names[130]
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/DJI_0490.jpg"
plot_thermal(f)
dim(temperature2)
plot_thermal <- function(image_path,crop=c(1,512,1,640)){ #[1:512,1:640]
img<-readflirJPG(image_path, exiftoolpath="installed")
cams<-flirsettings(f, exiftoolpath="installed", camvals="")
ObjectEmissivity<- cams$Info$Emissivity              # Image Saved Emissivity - should be ~0.95 or 0.96
dateOriginal<-cams$Dates$DateTimeOriginal             # Original date/time extracted from file
dateModif<-   cams$Dates$FileModificationDateTime     # Modification date/time extracted from file
PlanckR1<-    cams$Info$PlanckR1                      # Planck R1 constant for camera
PlanckB<-     cams$Info$PlanckB                       # Planck B constant for camera
PlanckF<-     cams$Info$PlanckF                       # Planck F constant for camera
PlanckO<-     cams$Info$PlanckO                       # Planck O constant for camera
PlanckR2<-    cams$Info$PlanckR2                      # Planck R2 constant for camera
ATA1<-        cams$Info$AtmosphericTransAlpha1        # Atmospheric Transmittance Alpha 1
ATA2<-        cams$Info$AtmosphericTransAlpha2        # Atmospheric Transmittance Alpha 2
ATB1<-        cams$Info$AtmosphericTransBeta1         # Atmospheric Transmittance Beta 1
ATB2<-        cams$Info$AtmosphericTransBeta2         # Atmospheric Transmittance Beta 2
ATX<-         cams$Info$AtmosphericTransX             # Atmospheric Transmittance X
OD<-          cams$Info$ObjectDistance                # object distance in metres
FD<-          cams$Info$FocusDistance                 # focus distance in metres
ReflT<-       cams$Info$ReflectedApparentTemperature  # Reflected apparent temperature
AtmosT<-      cams$Info$AtmosphericTemperature        # Atmospheric temperature
IRWinT<-      cams$Info$IRWindowTemperature           # IR Window Temperature
IRWinTran<-   cams$Info$IRWindowTransmission          # IR Window transparency
RH<-          cams$Info$RelativeHumidity              # Relative Humidity
h<-           cams$Info$RawThermalImageHeight         # sensor height (i.e. image height)
w<-           cams$Info$RawThermalImageWidth          # sensor width (i.e. image width)
temperature<-raw2temp(img, ObjectEmissivity, OD, ReflT, AtmosT, IRWinT, IRWinTran, RH,
PlanckR1, PlanckB, PlanckF, PlanckO, PlanckR2,
ATA1, ATA2, ATB1, ATB2, ATX)
temperature <- temperature[crop[1]:crop[2],crop[3],crop[4]]
h2 = dim(temperature)[1]
w2 = dim(temperature)[2]
toto <- plotTherm(temperature, h=h2, w=w2, minrangeset=min(temperature)-0.5, maxrangeset=max(temperature)+0.5, trans="rotate270.matrix")
return(toto)
}
#f <- img_names[130]
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/DJI_0490.jpg"
plot_thermal(f)
plot_thermal <- function(image_path,crop=c(1,512,1,640)){ #[1:512,1:640]
img<-readflirJPG(image_path, exiftoolpath="installed")
cams<-flirsettings(f, exiftoolpath="installed", camvals="")
ObjectEmissivity<- cams$Info$Emissivity              # Image Saved Emissivity - should be ~0.95 or 0.96
dateOriginal<-cams$Dates$DateTimeOriginal             # Original date/time extracted from file
dateModif<-   cams$Dates$FileModificationDateTime     # Modification date/time extracted from file
PlanckR1<-    cams$Info$PlanckR1                      # Planck R1 constant for camera
PlanckB<-     cams$Info$PlanckB                       # Planck B constant for camera
PlanckF<-     cams$Info$PlanckF                       # Planck F constant for camera
PlanckO<-     cams$Info$PlanckO                       # Planck O constant for camera
PlanckR2<-    cams$Info$PlanckR2                      # Planck R2 constant for camera
ATA1<-        cams$Info$AtmosphericTransAlpha1        # Atmospheric Transmittance Alpha 1
ATA2<-        cams$Info$AtmosphericTransAlpha2        # Atmospheric Transmittance Alpha 2
ATB1<-        cams$Info$AtmosphericTransBeta1         # Atmospheric Transmittance Beta 1
ATB2<-        cams$Info$AtmosphericTransBeta2         # Atmospheric Transmittance Beta 2
ATX<-         cams$Info$AtmosphericTransX             # Atmospheric Transmittance X
OD<-          cams$Info$ObjectDistance                # object distance in metres
FD<-          cams$Info$FocusDistance                 # focus distance in metres
ReflT<-       cams$Info$ReflectedApparentTemperature  # Reflected apparent temperature
AtmosT<-      cams$Info$AtmosphericTemperature        # Atmospheric temperature
IRWinT<-      cams$Info$IRWindowTemperature           # IR Window Temperature
IRWinTran<-   cams$Info$IRWindowTransmission          # IR Window transparency
RH<-          cams$Info$RelativeHumidity              # Relative Humidity
h<-           cams$Info$RawThermalImageHeight         # sensor height (i.e. image height)
w<-           cams$Info$RawThermalImageWidth          # sensor width (i.e. image width)
temperature<-raw2temp(img, ObjectEmissivity, OD, ReflT, AtmosT, IRWinT, IRWinTran, RH,
PlanckR1, PlanckB, PlanckF, PlanckO, PlanckR2,
ATA1, ATA2, ATB1, ATB2, ATX)
temperature <- temperature[crop[1]:crop[2],crop[3]:crop[4]]
h2 = dim(temperature)[1]
w2 = dim(temperature)[2]
toto <- plotTherm(temperature, h=h2, w=w2, minrangeset=min(temperature)-0.5, maxrangeset=max(temperature)+0.5, trans="rotate270.matrix")
return(toto)
}
#f <- img_names[130]
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/DJI_0490.jpg"
plot_thermal(f)
plot_thermal(f,crop=c(1,512,50,640))
plot_thermal(f,crop=c(1,512,80,640))
plot_thermal(f,crop=c(1,420,80,640))
plot_thermal(f,crop=c(1,440,80,640))
plot_thermal(f,crop=c(1,440,380,640))
plot_thermal <- function(image_path,crop=c(1,512,1,640)){ #[1:512,1:640]
img<-readflirJPG(image_path, exiftoolpath="installed")
cams<-flirsettings(f, exiftoolpath="installed", camvals="")
ObjectEmissivity<- cams$Info$Emissivity              # Image Saved Emissivity - should be ~0.95 or 0.96
dateOriginal<-cams$Dates$DateTimeOriginal             # Original date/time extracted from file
dateModif<-   cams$Dates$FileModificationDateTime     # Modification date/time extracted from file
PlanckR1<-    cams$Info$PlanckR1                      # Planck R1 constant for camera
PlanckB<-     cams$Info$PlanckB                       # Planck B constant for camera
PlanckF<-     cams$Info$PlanckF                       # Planck F constant for camera
PlanckO<-     cams$Info$PlanckO                       # Planck O constant for camera
PlanckR2<-    cams$Info$PlanckR2                      # Planck R2 constant for camera
ATA1<-        cams$Info$AtmosphericTransAlpha1        # Atmospheric Transmittance Alpha 1
ATA2<-        cams$Info$AtmosphericTransAlpha2        # Atmospheric Transmittance Alpha 2
ATB1<-        cams$Info$AtmosphericTransBeta1         # Atmospheric Transmittance Beta 1
ATB2<-        cams$Info$AtmosphericTransBeta2         # Atmospheric Transmittance Beta 2
ATX<-         cams$Info$AtmosphericTransX             # Atmospheric Transmittance X
OD<-          cams$Info$ObjectDistance                # object distance in metres
FD<-          cams$Info$FocusDistance                 # focus distance in metres
ReflT<-       cams$Info$ReflectedApparentTemperature  # Reflected apparent temperature
AtmosT<-      cams$Info$AtmosphericTemperature        # Atmospheric temperature
IRWinT<-      cams$Info$IRWindowTemperature           # IR Window Temperature
IRWinTran<-   cams$Info$IRWindowTransmission          # IR Window transparency
RH<-          cams$Info$RelativeHumidity              # Relative Humidity
h<-           cams$Info$RawThermalImageHeight         # sensor height (i.e. image height)
w<-           cams$Info$RawThermalImageWidth          # sensor width (i.e. image width)
temperature<-raw2temp(img, ObjectEmissivity, OD, ReflT, AtmosT, IRWinT, IRWinTran, RH,
PlanckR1, PlanckB, PlanckF, PlanckO, PlanckR2,
ATA1, ATA2, ATB1, ATB2, ATX)
temperature <- temperature[crop[1]:crop[2],crop[3]:crop[4]]
h2 = dim(temperature)[1]
w2 = dim(temperature)[2]
toto <- plotTherm(temperature, h=h2, w=w2, minrangeset=min(temperature)-0.5, maxrangeset=max(temperature)+0.5, trans="rotate270.matrix")
return(temperature)
}
#f <- img_names[130]
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/DJI_0490.jpg"
temp<-plot_thermal(f,crop=c(1,440,380,640))
head(temp)
write.table(temperature2,"/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal_preproc/temperature_DJI_0490_door.csv",row.names = FALSE, col.names =FALSE,sep = ",")
write.table(temp,"/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal_preproc/temperature_DJI_0490_door.csv",row.names = FALSE, col.names =FALSE,sep = ",")
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/IX-x1-00057_0278_0073_THM.jpg"
temp<-plot_thermal(f)#,crop=c(1,440,380,640))
temp<-plot_thermal(f,crop=c(200,512,380,640))
img<-readflirJPG(f, exiftoolpath="installed")
dim(img)
temp<-plot_thermal(f,crop=c(200,512,1,200))
temp<-plot_thermal(f,crop=c(200,512,1,640))
temp<-plot_thermal(f,crop=c(1,200,1,640))
temp<-plot_thermal(f,crop=c(1,200,200,640))
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/IX-x1-00057_0278_0076_THM.jpg"
temp<-plot_thermal(f)#,crop=c(1,200,200,640))
temp<-plot_thermal(f,crop=c(20,200,200,640))
temp<-plot_thermal(f,crop=c(30,210,220,580))
temp<-plot_thermal(f,crop=c(40,210,220,580))
temp<-plot_thermal(f,crop=c(40,210,240,560))
temp<-plot_thermal(f,crop=c(60,210,240,560))
temp<-plot_thermal(f,crop=c(65,210,260,560))
temp<-plot_thermal(f,crop=c(65,210,260,540))
temp<-plot_thermal(f,crop=c(65,200,260,540))
temp<-plot_thermal(f,crop=c(65,190,260,540))
write.table(temp,"/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal_preproc/IX-x1-00057_0278_0076_THM_roof.csv",row.names = FALSE, col.names =FALSE,sep = ",")
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/IX-x1-00057_0278_0110_THM.jpg"
temp<-plot_thermal(f,crop=c(65,190,260,540))
temp<-plot_thermal(f)#,crop=c(65,190,260,540))
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/IX-x1-00057_0278_0109_THM.jpg"
temp<-plot_thermal(f)#,crop=c(65,190,260,540))
temp<-plot_thermal(f,crop=c(65,512,260,540))
temp<-plot_thermal(f,crop=c(65,512,1,640))
temp<-plot_thermal(f,crop=c(100,512,1,25))
temp<-plot_thermal(f,crop=c(100,512,1,250))
temp<-plot_thermal(f,crop=c(100,512,1,270))
temp<-plot_thermal(f,crop=c(140,512,1,270))
temp<-plot_thermal(f,crop=c(150,512,1,270))
temp<-plot_thermal(f,crop=c(170,512,1,270))
temp<-plot_thermal(f,crop=c(170,512,1,280))
write.table(temp,"/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal_preproc/IX-x1-00057_0278_0109_THM_roof.csv",row.names = FALSE, col.names =FALSE,sep = ",")
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/IX-x1-00057_0278_0109_THM.jpg"
temp<-plot_thermal(f)#,crop=c(170,512,1,280))
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/singapour/Thermal/IX-x1-00057_0278_0109_THM.jpg"
temp<-plot_thermal(f)#,crop=c(170,512,1,280))
write.table(temp,"/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/singapour/Thermal_preproc/IX-x1-00057_0278_0109_THM.csv",row.names = FALSE, col.names =FALSE,sep = ",")
#f <- img_names[130]
f <- "/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal/DJI_0490.jpg"
temp<-plot_thermal(f)#,crop=c(170,512,1,280))
write.table(temp,"/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Veracruz/Thermal_preproc/DJI_0490.csv",row.names = FALSE, col.names =FALSE,sep = ",")
img_names <- list.files("/Users/stouzani/Desktop/Unstructured_ML/DL_Models/a3dbr/data/Drone_Flight/Thermal/", pattern = "*.jpg", full.names = TRUE)
img_names[1]
img_names <- list.files("/Users/stouzani/Desktop/Unstructured_ML/DL_Models/a3dbr/data/Drone_Flight/Thermal", pattern = "*.jpg", full.names = TRUE)
img_names[1]
img_names <- list.files("/Users/stouzani/Desktop/Unstructured_ML/DL_Models/a3dbr/data/Drone_Flight/Thermal", pattern = "*.jpg", full.names = TRUE)
f <- img_names[1]
temp<-plot_thermal(f)
f <- img_names[1]
f
cams<-flirsettings(f, exiftoolpath="installed", camvals="")
head(cbind(cams$Info), 20) # Large amount of Info, show just the first 20 tages for readme
plancks<-flirsettings(f, exiftoolpath="installed", camvals="-*Planck*")
unlist(plancks$Info)
f <- img_names[10]
temp<-plot_thermal(f)
#/Users/stouzani/Google\ Drive/LBL-drone-thermal-project/Drone_Images_December2019/Thermal
#/Users/stouzani/Desktop/Unstructured_ML/DL_Models/a3dbr/data/Drone_Flight/Thermal
img_names <- list.files("/Users/stouzani/Google\ Drive/LBL-drone-thermal-project/Drone_Images_December2019/Thermal", pattern = "*.jpg", full.names = TRUE)
f <- img_names[10]
temp<-plot_thermal(f)
f <- img_names[73]
f
temp<-plot_thermal(f)
f <- img_names[106]
f
temp<-plot_thermal(f)
f <- img_names[173]
f
temp<-plot_thermal(f)
f <- img_names[183]
f
temp<-plot_thermal(f)
f <- img_names[193]
f
temp<-plot_thermal(f)
length(img_names)
f <- img_names[220]
f
temp<-plot_thermal(f)
f <- img_names[240]
f
temp<-plot_thermal(f)
f <- img_names[250]
f
temp<-plot_thermal(f)
f <- img_names[255]
f
temp<-plot_thermal(f)
f <- img_names[265]
f
temp<-plot_thermal(f)
f <- img_names[285]
f
temp<-plot_thermal(f)
f <- img_names[295]
f
temp<-plot_thermal(f)
f <- img_names[305]
f
temp<-plot_thermal(f)
f <- img_names[315]
f
temp<-plot_thermal(f)
f <- img_names[32 5]
f
f <- img_names[325]
f
temp<-plot_thermal(f)
f <- img_names[335]
f
temp<-plot_thermal(f)
temp<-plot_thermal(f)
write.table(temp,"/Users/stouzani/Desktop/Unstructured_ML/Drone/Drone_Data_Capture/Alameda_December_2019/Thermal_preproc/DJI_0351.csv",row.names = FALSE, col.names =FALSE,sep = ",")
